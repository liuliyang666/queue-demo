{"version":3,"sources":["tree.js"],"names":["createTree","value","data","children","addChild","node","newNode","push","tree","node2","node3","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,aAAa,SAAbA,UAAa,CAACC,KAAD,EAAW;AAC5B,SAAO;AACLC,UAAMD,KADD;AAELE,cAAU;AAFL,GAAP;AAID,CALD;AAMA,IAAMC,WAAW,SAAXA,QAAW,CAACC,IAAD,EAAOJ,KAAP,EAAiB;AAChC,MAAMK,UAAU;AACdJ,UAAMD,KADQ;AAEdE,cAAU;AAFI,GAAhB;AAIAE,OAAKF,QAAL,GAAgBE,KAAKF,QAAL,IAAiB,EAAjC;AACAE,OAAKF,QAAL,CAAcI,IAAd,CAAmBD,OAAnB;AACA,SAAOA,OAAP;AACD,CARD;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAME,OAAOR,WAAW,EAAX,CAAb;AACA,IAAMS,QAAQL,SAASI,IAAT,EAAe,EAAf,CAAd;AACA,IAAME,QAAQN,SAASI,IAAT,EAAe,EAAf,CAAd;AACAJ,SAASI,IAAT,EAAe,EAAf;AACAJ,SAASI,IAAT,EAAe,EAAf;AACAJ,SAASI,IAAT,EAAe,GAAf;AACAJ,SAASI,IAAT,EAAe,GAAf;AACAJ,SAASI,IAAT,EAAe,GAAf;AACAJ,SAASI,IAAT,EAAe,GAAf;AACAG,QAAQC,GAAR,CAAYJ,IAAZ;;AAEA;AACA;AACA;AACA","file":"tree.map","sourceRoot":"..\\src","sourcesContent":["const createTree = (value) => {\r\n  return {\r\n    data: value,\r\n    children: null,\r\n  };\r\n};\r\nconst addChild = (node, value) => {\r\n  const newNode = {\r\n    data: value,\r\n    children: null,\r\n  };\r\n  node.children = node.children || [];\r\n  node.children.push(newNode);\r\n  return newNode;\r\n};\r\n//const travel = (tree, fn) => {\r\n//fn(tree);\r\n//if (!tree.children) {\r\n//return;\r\n//}\r\n//for (let i = 0; i < tree.children.length; i++) {\r\n//travel(tree.children[i], fn);\r\n//}\r\n//};\r\nconst tree = createTree(10);\r\nconst node2 = addChild(tree, 20);\r\nconst node3 = addChild(tree, 30);\r\naddChild(tree, 40);\r\naddChild(tree, 50);\r\naddChild(tree, 201);\r\naddChild(tree, 202);\r\naddChild(tree, 203);\r\naddChild(tree, 204);\r\nconsole.log(tree);\r\n\r\n//const fn = (node) => {\r\n// console.log(node.data);\r\n//};\r\n//travel(tree, fn);\r\n"]}